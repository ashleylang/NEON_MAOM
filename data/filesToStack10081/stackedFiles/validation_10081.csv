table,fieldName,description,dataType,units,parserToCreate,entryValidationRulesParser,entryValidationRulesForm
mcc_taxonTableMetadata_ITS,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
mcc_taxonTableMetadata_ITS,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[REQUIRE][NAMED_LOCATION_TYPE('External Lab')]",
mcc_taxonTableMetadata_ITS,locationID,"Identifier for location where sample was collected",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc' OR 'AOS S2 named location type' OR 'AOS outlet named location type' OR 'AOS inlet named location type' OR 'AOS buoy named location type' OR 'AOS reach named location type' OR 'AOS riparian named location type')]",
mcc_taxonTableMetadata_ITS,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_taxonTableMetadata_ITS,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_taxonTableMetadata_ITS,analysisDate,"Date that the sample was analyzed",dateTime,NA,"IF (IS_BLANK), UPLOAD_DATE","[REQUIRE][ASCII][REQUIRE_COLUMN]",
mcc_taxonTableMetadata_ITS,sampleMaterial,"The material in which a sample was embedded prior to the sampling event",string,NA,"[IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)-M-|-O-'), 'soil'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)seston|plankton'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)\\.ss\\.|\\.in\\.|\\.ot\\.|\\.re\\.|\\.c[0-3]\\.'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epilithon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epixylon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epiphyton'), 'plant-associated'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipsammon'), 'sediment'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipelon'), 'sediment']","[REQUIRE][LOV]",
mcc_taxonTableMetadata_ITS,dnaSampleID,"Identifier for DNA sample",string,NA,,"[EXISTS]",
mcc_taxonTableMetadata_ITS,dnaSampleFate,"Fate of a DNA sample",string,NA,"[DEFAULT_TO('active')]",,
mcc_taxonTableMetadata_ITS,dnaSampleCode,"Barcode of a DNA sample",string,NA,,,
mcc_taxonTableMetadata_ITS,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][IF laboratoryName != 'Argonne National Laboratory', REQUIRE]",
mcc_taxonTableMetadata_ITS,subsampleID,"Unique identifier associated with each subsample per sampleID",string,NA,"[IF laboratoryName != 'Argonne National Laboratory', dnaSampleID+'_'+internalLabID]","[ASCII][EXISTS]",
mcc_taxonTableMetadata_ITS,subsampleFate,"Fate of a subsample",string,NA,"[IF IS_NOT_BLANK(subsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_taxonTableMetadata_ITS,subsampleCode,"Barcode of a subsample",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,communitySubsampleID,"Unique identifier associated with the microbial community composition subsample",string,NA,,"[MIGHT_EXIST]",
mcc_taxonTableMetadata_ITS,communitySubsampleFate,"Fate of a microbial community composition subsample",string,NA,"[IF IS_NOT_BLANK(communitySubsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_taxonTableMetadata_ITS,communitySubsampleCode,"Barcode of a microbial community composition subsample",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,downloadFileUrl,"The URL of the file linked to the record",uri,NA,"[GROUP_BY_SAMPLE('dnaSample')][S3_DATA_FRAME_URL  +  [IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_ITS_' + [NOW] [DATE_TIME_FORMAT('yyyyMMdd\'T\'HHmmss.SSSX')] + '.csv']","[MIME_TYPE('application/csv')]",
mcc_taxonTableMetadata_ITS,downloadFileName,"The name of the user-downloaded file that is linked to the record",string,NA,"[IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_ITS' + '.csv'","[REQUIRE][ASCII]",
mcc_taxonTableMetadata_ITS,testMethod,"Method used to conduct test",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('SOP')]",
mcc_taxonTableMetadata_ITS,targetGene,"Targeted gene or locus name",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('(?i)ITS')][ASCII]",
mcc_taxonTableMetadata_ITS,targetTaxonGroup,"Taxonomic group targeted",string,NA,,"[REQUIRE][LOV]",
mcc_taxonTableMetadata_ITS,dnaSampleIDDataFrame,"Identifier copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleID, 'dnaSampleID')",,
mcc_taxonTableMetadata_ITS,dnaSampleCodeDataFrame,"Barcode copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleCode, 'dnaSampleCode')",,
mcc_taxonTableMetadata_ITS,completeTaxonomy,"Full taxonomic hierarchy for identified organism",string,NA,,"[REQUIRE][ASCII]",
mcc_taxonTableMetadata_ITS,domain,"The scientific name of the domain in which the taxon is classified",string,NA,,"[REQUIRE][LOV]",
mcc_taxonTableMetadata_ITS,kingdom,"The scientific name of the kingdom in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,phylum,"The scientific name of the phylum or division in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,class,"The scientific name of the class in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,order,"The scientific name of the order in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,family,"The scientific name of the family in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,genus,"The scientific name of the genus in which the organism is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,specificEpithet,"The specific epithet (second part of the species name) of the scientific name applied to the taxon",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,scientificName,"Scientific name, associated with the taxonID. This is the name of the lowest level taxonomic rank that can be determined",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,individualCount,"Number of individuals of the same type",unsigned integer,number,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(1000000)]",
mcc_taxonTableMetadata_ITS,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[REQUIRE][ASCII]",
mcc_taxonTableMetadata_ITS,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_ITS,dataQF,"Data quality flag",string,NA,,,
mcc_taxonTableMetadata_16S,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
mcc_taxonTableMetadata_16S,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[REQUIRE][NAMED_LOCATION_TYPE('External Lab')]",
mcc_taxonTableMetadata_16S,locationID,"Identifier for location where sample was collected",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc' OR 'AOS S2 named location type' OR 'AOS outlet named location type' OR 'AOS inlet named location type' OR 'AOS buoy named location type' OR 'AOS reach named location type' OR 'AOS riparian named location type')]",
mcc_taxonTableMetadata_16S,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_taxonTableMetadata_16S,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_taxonTableMetadata_16S,analysisDate,"Date that the sample was analyzed",dateTime,NA,"IF (IS_BLANK), UPLOAD_DATE","[REQUIRE][ASCII][REQUIRE_COLUMN]",
mcc_taxonTableMetadata_16S,sampleMaterial,"The material in which a sample was embedded prior to the sampling event",string,NA,"[IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)-M-|-O-'), 'soil'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)seston|plankton'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)\\.ss\\.|\\.in\\.|\\.ot\\.|\\.re\\.|\\.c[0-3]\\.'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epilithon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epixylon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epiphyton'), 'plant-associated'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipsammon'), 'sediment'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipelon'), 'sediment']","[REQUIRE][LOV]",
mcc_taxonTableMetadata_16S,dnaSampleID,"Identifier for DNA sample",string,NA,,"[EXISTS]",
mcc_taxonTableMetadata_16S,dnaSampleFate,"Fate of a DNA sample",string,NA,"[DEFAULT_TO('active')]",,
mcc_taxonTableMetadata_16S,dnaSampleCode,"Barcode of a DNA sample",string,NA,,,
mcc_taxonTableMetadata_16S,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][IF laboratoryName != 'Argonne National Laboratory', REQUIRE]",
mcc_taxonTableMetadata_16S,subsampleID,"Unique identifier associated with each subsample per sampleID",string,NA,"[IF laboratoryName != 'Argonne National Laboratory', dnaSampleID+'_'+internalLabID]","[ASCII][EXISTS]",
mcc_taxonTableMetadata_16S,subsampleFate,"Fate of a subsample",string,NA,"[IF IS_NOT_BLANK(subsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_taxonTableMetadata_16S,subsampleCode,"Barcode of a subsample",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,communitySubsampleID,"Unique identifier associated with the microbial community composition subsample",string,NA,,"[MIGHT_EXIST]",
mcc_taxonTableMetadata_16S,communitySubsampleFate,"Fate of a microbial community composition subsample",string,NA,"[IF IS_NOT_BLANK(communitySubsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_taxonTableMetadata_16S,communitySubsampleCode,"Barcode of a microbial community composition subsample",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,downloadFileUrl,"The URL of the file linked to the record",uri,NA,"[GROUP_BY_SAMPLE('dnaSample')][S3_DATA_FRAME_URL  +  [IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_16S_' + [NOW] [DATE_TIME_FORMAT('yyyyMMdd\'T\'HHmmss.SSSX')] + '.csv']","[MIME_TYPE('application/csv')]",
mcc_taxonTableMetadata_16S,downloadFileName,"The name of the user-downloaded file that is linked to the record",string,NA,"[IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_16S' + '.csv'","[REQUIRE][ASCII]",
mcc_taxonTableMetadata_16S,testMethod,"Method used to conduct test",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('SOP')]",
mcc_taxonTableMetadata_16S,targetGene,"Targeted gene or locus name",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('(?i)16S')][ASCII]",
mcc_taxonTableMetadata_16S,targetTaxonGroup,"Taxonomic group targeted",string,NA,,"[REQUIRE][LOV]",
mcc_taxonTableMetadata_16S,dnaSampleIDDataFrame,"Identifier copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleID, 'dnaSampleID')",,
mcc_taxonTableMetadata_16S,dnaSampleCodeDataFrame,"Barcode copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleCode, 'dnaSampleCode')",,
mcc_taxonTableMetadata_16S,completeTaxonomy,"Full taxonomic hierarchy for identified organism",string,NA,,"[REQUIRE][ASCII]",
mcc_taxonTableMetadata_16S,domain,"The scientific name of the domain in which the taxon is classified",string,NA,,"[REQUIRE][LOV]",
mcc_taxonTableMetadata_16S,kingdom,"The scientific name of the kingdom in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,phylum,"The scientific name of the phylum or division in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,class,"The scientific name of the class in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,order,"The scientific name of the order in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,family,"The scientific name of the family in which the taxon is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,genus,"The scientific name of the genus in which the organism is classified",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,specificEpithet,"The specific epithet (second part of the species name) of the scientific name applied to the taxon",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,scientificName,"Scientific name, associated with the taxonID. This is the name of the lowest level taxonomic rank that can be determined",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,individualCount,"Number of individuals of the same type",unsigned integer,number,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(1000000)]",
mcc_taxonTableMetadata_16S,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[REQUIRE][ASCII]",
mcc_taxonTableMetadata_16S,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]",
mcc_taxonTableMetadata_16S,dataQF,"Data quality flag",string,NA,,,
mcc_sequenceVariantMetadata_16S,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
mcc_sequenceVariantMetadata_16S,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[REQUIRE][NAMED_LOCATION_TYPE('External Lab')]",
mcc_sequenceVariantMetadata_16S,locationID,"Identifier for location where sample was collected",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc' OR 'AOS S2 named location type' OR 'AOS outlet named location type' OR 'AOS inlet named location type' OR 'AOS buoy named location type' OR 'AOS reach named location type' OR 'AOS riparian named location type')]",
mcc_sequenceVariantMetadata_16S,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_sequenceVariantMetadata_16S,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_sequenceVariantMetadata_16S,analysisDate,"Date that the sample was analyzed",dateTime,NA,"IF (IS_BLANK), UPLOAD_DATE","[REQUIRE][ASCII][REQUIRE_COLUMN]",
mcc_sequenceVariantMetadata_16S,sampleMaterial,"The material in which a sample was embedded prior to the sampling event",string,NA,"[IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)-M-|-O-'), 'soil'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)seston|plankton'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)\\.ss\\.|\\.in\\.|\\.ot\\.|\\.re\\.|\\.c[0-3]\\.'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epilithon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epixylon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epiphyton'), 'plant-associated'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipsammon'), 'sediment'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipelon'), 'sediment']","[REQUIRE][LOV]",
mcc_sequenceVariantMetadata_16S,dnaSampleID,"Identifier for DNA sample",string,NA,,"[EXISTS]",
mcc_sequenceVariantMetadata_16S,dnaSampleFate,"Fate of a DNA sample",string,NA,"[DEFAULT_TO('active')]",,
mcc_sequenceVariantMetadata_16S,dnaSampleCode,"Barcode of a DNA sample",string,NA,,,
mcc_sequenceVariantMetadata_16S,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][IF laboratoryName != 'Argonne National Laboratory', REQUIRE]",
mcc_sequenceVariantMetadata_16S,sequencerRunID,"Identifier for the sequencing run",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,subsampleID,"Unique identifier associated with each subsample per sampleID",string,NA,"[IF laboratoryName != 'Argonne National Laboratory', dnaSampleID+'_'+internalLabID]","[ASCII][EXISTS]",
mcc_sequenceVariantMetadata_16S,subsampleFate,"Fate of a subsample",string,NA,"[IF IS_NOT_BLANK(subsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_sequenceVariantMetadata_16S,subsampleCode,"Barcode of a subsample",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,communitySubsampleID,"Unique identifier associated with the microbial community composition subsample",string,NA,,"[MIGHT_EXIST]",
mcc_sequenceVariantMetadata_16S,communitySubsampleFate,"Fate of a microbial community composition subsample",string,NA,"[IF IS_NOT_BLANK(communitySubsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_sequenceVariantMetadata_16S,communitySubsampleCode,"Barcode of a microbial community composition subsample",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,downloadFileUrl,"The URL of the file linked to the record",uri,NA,"[GROUP_BY_SAMPLE('dnaSample')][S3_DATA_FRAME_URL  +  [IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_16S_' + [NOW] [DATE_TIME_FORMAT('yyyyMMdd\'T\'HHmmss')] + '.csv']","[MIME_TYPE('application/csv')]",
mcc_sequenceVariantMetadata_16S,downloadFileName,"The name of the user-downloaded file that is linked to the record",string,NA,"[IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_16S_' + [NOW] [DATE_TIME_FORMAT('yyyyMMdd\'T\'HHmmss')] + '.csv'","[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_16S,codeVersion,"Method used to conduct the bioinformatic analysis from raw sequencing files",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('sequenceVariant_analysis')]",
mcc_sequenceVariantMetadata_16S,targetGene,"Targeted gene or locus name",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('(?i)16S')][ASCII]",
mcc_sequenceVariantMetadata_16S,targetTaxonGroup,"Taxonomic group targeted",string,NA,,"[REQUIRE][LOV]",
mcc_sequenceVariantMetadata_16S,dnaSampleIDDataFrame,"Identifier copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleID, 'dnaSampleID')",,
mcc_sequenceVariantMetadata_16S,dnaSampleCodeDataFrame,"Barcode copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleCode, 'dnaSampleCode')",,
mcc_sequenceVariantMetadata_16S,sequenceName,"Name associated with the sequence",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_16S,taxonSequence,"Sequence associated with the taxon",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_16S,completeTaxonomy,"Full taxonomic hierarchy for identified organism",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_16S,domain,"The scientific name of the domain in which the taxon is classified",string,NA,,"[REQUIRE][LOV]",
mcc_sequenceVariantMetadata_16S,kingdom,"The scientific name of the kingdom in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,phylum,"The scientific name of the phylum or division in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,class,"The scientific name of the class in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,order,"The scientific name of the order in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,family,"The scientific name of the family in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,genus,"The scientific name of the genus in which the organism is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,specificEpithet,"The specific epithet (second part of the species name) of the scientific name applied to the taxon",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,scientificName,"Scientific name, associated with the taxonID. This is the name of the lowest level taxonomic rank that can be determined",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,individualCount,"Number of individuals of the same type",unsigned integer,number,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(1000000)]",
mcc_sequenceVariantMetadata_16S,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_16S,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_16S,sampleFilteredReadNumber,"Number of sequence reads that pass quality filtering",unsigned integer,number,,"[IF collectDate>2016-01-01T00:00, REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)]",
mcc_sequenceVariantMetadata_16S,sequenceCountQF,"Quality flag for number of sequences analyzed",string,NA,"[IF(sampleFilteredReadNumber<4000),'Below threshold'][IF(sampleFilteredReadNumber>=4000),'OK']","[LOV]",
mcc_sequenceVariantMetadata_16S,dataQF,"Data quality flag",string,NA,,,
mcc_sequenceVariantMetadata_ITS,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
mcc_sequenceVariantMetadata_ITS,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[REQUIRE][NAMED_LOCATION_TYPE('External Lab')]",
mcc_sequenceVariantMetadata_ITS,locationID,"Identifier for location where sample was collected",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc' OR 'AOS S2 named location type' OR 'AOS outlet named location type' OR 'AOS inlet named location type' OR 'AOS buoy named location type' OR 'AOS reach named location type' OR 'AOS riparian named location type')]",
mcc_sequenceVariantMetadata_ITS,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_sequenceVariantMetadata_ITS,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'amc' OR 'swc.amc' OR 'asi.amc' OR 'sdg.amc' OR 'swc.asi.amc' OR 'swc.sdg.amc' OR 'asi.sdg.amc' OR 'swc.asi.sdg.amc' OR 'amb_fieldParent_in.sampleID')]",,
mcc_sequenceVariantMetadata_ITS,analysisDate,"Date that the sample was analyzed",dateTime,NA,"IF (IS_BLANK), UPLOAD_DATE","[REQUIRE][ASCII][REQUIRE_COLUMN]",
mcc_sequenceVariantMetadata_ITS,sampleMaterial,"The material in which a sample was embedded prior to the sampling event",string,NA,"[IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)-M-|-O-'), 'soil'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)seston|plankton'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)\\.ss\\.|\\.in\\.|\\.ot\\.|\\.re\\.|\\.c[0-3]\\.'), 'water'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epilithon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epixylon'), 'biofilm'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epiphyton'), 'plant-associated'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipsammon'), 'sediment'][IF MATCH_REGULAR_EXPRESSION(dnaSampleID, '(?i)epipelon'), 'sediment']","[REQUIRE][LOV]",
mcc_sequenceVariantMetadata_ITS,dnaSampleID,"Identifier for DNA sample",string,NA,,"[EXISTS]",
mcc_sequenceVariantMetadata_ITS,dnaSampleFate,"Fate of a DNA sample",string,NA,"[DEFAULT_TO('active')]",,
mcc_sequenceVariantMetadata_ITS,dnaSampleCode,"Barcode of a DNA sample",string,NA,,,
mcc_sequenceVariantMetadata_ITS,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][IF laboratoryName != 'Argonne National Laboratory', REQUIRE]",
mcc_sequenceVariantMetadata_ITS,sequencerRunID,"Identifier for the sequencing run",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,subsampleID,"Unique identifier associated with each subsample per sampleID",string,NA,"[IF laboratoryName != 'Argonne National Laboratory', dnaSampleID+'_'+internalLabID]","[ASCII][EXISTS]",
mcc_sequenceVariantMetadata_ITS,subsampleFate,"Fate of a subsample",string,NA,"[IF IS_NOT_BLANK(subsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_sequenceVariantMetadata_ITS,subsampleCode,"Barcode of a subsample",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,communitySubsampleID,"Unique identifier associated with the microbial community composition subsample",string,NA,,"[MIGHT_EXIST]",
mcc_sequenceVariantMetadata_ITS,communitySubsampleFate,"Fate of a microbial community composition subsample",string,NA,"[IF IS_NOT_BLANK(communitySubsampleID), DEFAULT_TO('not a physical sample')]","[ASCII]",
mcc_sequenceVariantMetadata_ITS,communitySubsampleCode,"Barcode of a microbial community composition subsample",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,downloadFileUrl,"The URL of the file linked to the record",uri,NA,"[GROUP_BY_SAMPLE('dnaSample')][S3_DATA_FRAME_URL  +  [IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_ITS_' + [NOW] [DATE_TIME_FORMAT('yyyyMMdd\'T\'HHmmss')] + '.csv']","[MIME_TYPE('application/csv')]",
mcc_sequenceVariantMetadata_ITS,downloadFileName,"The name of the user-downloaded file that is linked to the record",string,NA,"[IF IS_NOT_BLANK(dnaSampleID), dnaSampleID][IF IS_BLANK(dnaSampleID), dnaSampleCode] + '_ITS_' + [NOW] [DATE_TIME_FORMAT('yyyyMMdd\'T\'HHmmss')] + '.csv'","[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_ITS,codeVersion,"Method used to conduct the bioinformatic analysis from raw sequencing files",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('sequenceVariant_analysis')]",
mcc_sequenceVariantMetadata_ITS,targetGene,"Targeted gene or locus name",string,NA,,"[REQUIRE][LOV][MATCH_REGULAR_EXPRESSION('(?i)ITS')][ASCII]",
mcc_sequenceVariantMetadata_ITS,targetTaxonGroup,"Taxonomic group targeted",string,NA,,"[REQUIRE][LOV]",
mcc_sequenceVariantMetadata_ITS,dnaSampleIDDataFrame,"Identifier copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleID, 'dnaSampleID')",,
mcc_sequenceVariantMetadata_ITS,dnaSampleCodeDataFrame,"Barcode copy of sample to a data frame column",string,NA,"TO_DATA_FRAME_COLUMN(dnaSampleCode, 'dnaSampleCode')",,
mcc_sequenceVariantMetadata_ITS,sequenceName,"Name associated with the sequence",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_ITS,taxonSequence,"Sequence associated with the taxon",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_ITS,completeTaxonomy,"Full taxonomic hierarchy for identified organism",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_ITS,domain,"The scientific name of the domain in which the taxon is classified",string,NA,,"[REQUIRE][LOV]",
mcc_sequenceVariantMetadata_ITS,kingdom,"The scientific name of the kingdom in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,phylum,"The scientific name of the phylum or division in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,class,"The scientific name of the class in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,order,"The scientific name of the order in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,family,"The scientific name of the family in which the taxon is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,genus,"The scientific name of the genus in which the organism is classified",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,specificEpithet,"The specific epithet (second part of the species name) of the scientific name applied to the taxon",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,scientificName,"Scientific name, associated with the taxonID. This is the name of the lowest level taxonomic rank that can be determined",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,individualCount,"Number of individuals of the same type",unsigned integer,number,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(1000000)]",
mcc_sequenceVariantMetadata_ITS,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[REQUIRE][ASCII]",
mcc_sequenceVariantMetadata_ITS,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]",
mcc_sequenceVariantMetadata_ITS,sampleFilteredReadNumber,"Number of sequence reads that pass quality filtering",unsigned integer,number,,"[IF collectDate>2016-01-01T00:00, REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)]",
mcc_sequenceVariantMetadata_ITS,sequenceCountQF,"Quality flag for number of sequences analyzed",string,NA,"[IF(sampleFilteredReadNumber<4000),'Below threshold'][IF(sampleFilteredReadNumber)>=4000,'OK']","[LOV]",
mcc_sequenceVariantMetadata_ITS,dataQF,"Data quality flag",string,NA,,,
mcc_taxonTableLabSummary,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
mcc_taxonTableLabSummary,targetTaxonGroup,"Taxonomic group targeted",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
mcc_taxonTableLabSummary,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
mcc_taxonTableLabSummary,codeVersion,"Method used to conduct the bioinformatic analysis from raw sequencing files",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,chimeraMethod,"Method used to remove chimeras from sequences",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,clusterMethod,"Method used to cluster sequences",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,clusterSimilarity,"Similarity threshold for sequence clusters",real,percent,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,alignmentMethod,"Method used to align sequences",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,referenceDatabase,"Reference database used for taxonomic identification",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,referenceDatabaseVersion,"The unique name and numbering combination assigned to the reference database",string,NA,,,
mcc_taxonTableLabSummary,analysisProgram,"Program or software used to analyze sequences for taxonomic identification",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,analysisProgramVersion,"The unique name and numbering combination assigned to the analysis program",string,NA,,,
mcc_taxonTableLabSummary,sequenceMatchMethod,"Method and/or algorithm used to evaluate the similarity between a query and reference sequence",string,NA,,"[REQUIRE][ASCII][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,sequenceMatchThresholdValue,"Threshold value for considering a query and a reference sequence a match",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,sequenceMatchValueDescription,"Description of the metric used to evaluate if a query and a reference sequence are a match",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,analysisCodeFileName,"File name of code used for data analysis",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[REQUIRE][NAMED_LOCATION_TYPE('External Lab')]",
mcc_taxonTableLabSummary,labSpecificStartDate,"Date a specific analyte, instrument, and associated method detection limit combination started",dateTime,NA,"[CONVERT_TO_UTC(laboratoryName)]","[REQUIRE][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,labSpecificEndDate,"Date a specific analyte, instrument, and associated method detection limit combination ended",dateTime,NA,"[CONVERT_TO_UTC(laboratoryName)]","[GREATER_THAN_OR_EQUAL_TO(labSpecificStartDate)][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[REQUIRE][ASCII][REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[REQUIRE_COLUMN]",
mcc_taxonTableLabSummary,dataQF,"Data quality flag",string,NA,,,
